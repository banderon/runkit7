language: php

cache:
  directories:
    - $HOME/travis_cache

dist: xenial

env:
  - CC=clang
  - CC=gcc CXX=g++
  - CC=gcc CXX=g++ VALGRIND=1
  # Some bugs in runkit only show up without zts enabled. (aka NTS)
  # Specifying PHP_VERSION is done to keep up to date versions in 7.1 (Does it work?)
  # Add --enable-session so $_SESSION will exist in runkit superglobal test
  - CC=gcc CXX=g++ VALGRIND=1 PHP_NTS_USE=1 PHP_CONFIGURE_ARGS='--disable-all --disable-zts --enable-debug --enable-session'
  # The VM implementation is different on 32-bit php. Test those as well.
  - CC=gcc CXX=g++ USE_32BIT=1 VALGRIND=1 PHP_NTS_USE=actually-zts PHP_CONFIGURE_ARGS='--disable-all --enable-maintainer-zts --enable-debug --enable-session'

# Defined at https://github.com/php-build/php-build/tree/master/share/php-build/definitions
php:
  - 8.0snapshot
  - 7.4
  - 7.3
  - 7.2

matrix:
  allow_failures:
    - php: 8.0snapshot
  exclude:
    - php: 7.2
      env: CC=gcc CXX=g++
    # Until https://bugs.php.net/bug.php?id=75951 is fixed for PHP 7.3 and 8.0snapshot, exclude testing on clang since it won't build.
    # This affects both the newer clang-5.0 and the default Travis version.
    - php: 7.3
      env: CC=clang
    - php: 7.4
      env: CC=gcc CXX=g++ VALGRIND=1 PHP_NTS_USE=1 PHP_CONFIGURE_ARGS='--disable-all --disable-zts --enable-debug --enable-session'
    - php: 7.4
      env: CC=clang
    - php: 8.0snapshot
      env: CC=gcc CXX=g++ VALGRIND=1 PHP_NTS_USE=1 PHP_CONFIGURE_ARGS='--disable-all --disable-zts --enable-debug --enable-session'
    - php: 8.0snapshot
      env: CC=clang
    - php: 8.0snapshot
      env: CC=gcc CXX=g++

install:
  - sudo apt-get install -qq $CC
  - $CC --version
  - if [ "x$USE_32BIT" != "x" ]; then sudo apt-get install -y g++-multilib libc6-dev-i386; export CC="$PWD/ci/gcc-32.sh"; export CXX="$PWD/ci/g++-32.sh"; $CC --version;  fi
  # Test some builds with valgrind to check for memory leaks and invalid memory accesses
  - if [ "$VALGRIND" -eq 1 ]; then sudo apt-get install -qq valgrind; export TEST_PHP_ARGS="-m"; valgrind --version; fi
  # For NTS builds: Install NTS and set the php.ini to a different blank file.
  - if [ "x$PHP_NTS_USE" != "x" ]; then export PHP_NTS_VERSION=$(./ci/get_global_php_version.sh); echo "Version is $PHP_NTS_VERSION"; ./ci/install_php_nts.sh || exit 1; export PATH="$(./ci/generate_php_install_dir.sh)/bin:$PATH"; export PHPRC=$PWD/ci/; else ./ci/wipe_travis_cache.sh; fi
  - if [ "$VALGRIND" -eq 1 -a "x$USE_32BIT" != "x" ]; then sudo apt-get install -y libc6-dbg:i386; fi

before_script:
 - $CC --version && ci/print_php_int_max.php
 - (export CC; phpize && ./configure && make)

script:
 - phpenv config-rm xdebug.ini || true
 - ci/run_tests.sh
 # Print any valgrind errors
 # Don't print too many - work around "The job exceeded the maximum log length, and has been terminated."
 - shopt -s nullglob; head -n 999 tests/*.mem < /dev/null | head -n 10000

branches:
  only:
    - master
    - v3

notifications:
 email: false
